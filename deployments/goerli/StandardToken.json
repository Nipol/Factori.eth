{
  "address": "0xc5aD931a86e1d2044Fe91E2D65f9e393C8FcE158",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PERMIT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "contractVersion",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tokenName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tokenSymbol",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "tokenDecimals",
          "type": "uint8"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mintTo",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "callData",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "returnData",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "resignOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x4163674e07f4457d13af734a274c8bcc3734240b8d8e4701348efe6775c6ba67",
  "receipt": {
    "to": null,
    "from": "0x2e6bE9855A3bF02C73Ba74B7d756a63DB7762238",
    "contractAddress": "0xc5aD931a86e1d2044Fe91E2D65f9e393C8FcE158",
    "transactionIndex": 0,
    "gasUsed": "1733191",
    "logsBloom": "0x
    "blockHash": "0xf9a62df29e74e8bf67ca70d626be83d3093a943f5c536e7480532f637daf45ee",
    "transactionHash": "0x4163674e07f4457d13af734a274c8bcc3734240b8d8e4701348efe6775c6ba67",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 5531548,
        "transactionHash": "0x4163674e07f4457d13af734a274c8bcc3734240b8d8e4701348efe6775c6ba67",
        "address": "0xc5aD931a86e1d2044Fe91E2D65f9e393C8FcE158",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000002e6be9855a3bf02c73ba74b7d756a63db7762238"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xf9a62df29e74e8bf67ca70d626be83d3093a943f5c536e7480532f637daf45ee"
      }
    ],
    "blockNumber": 5531548,
    "cumulativeGasUsed": "1733191",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "307295c9735bcaf37b532e4fd0ce1e18",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractVersion\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"tokenDecimals\",\"type\":\"uint8\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mintTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"callData\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"returnData\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resignOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"_owner\":\"Token owner's address (Authorizer)\",\"deadline\":\"Expiration time, seconds since the epoch\",\"r\":\"r of the signature\",\"s\":\"s of the signature\",\"spender\":\"Spender's address\",\"v\":\"v of the signature\",\"value\":\"Amount of allowance\"}},\"transferOwnership(address)\":{\"params\":{\"newOwner\":\"The address of the new owner of the contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"owner()\":{\"notice\":\"Get the address of the owner\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Update allowance with a signed permit\"},\"transferOwnership(address)\":{\"notice\":\"Set the address of the new owner of the contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/templates/StandardToken.sol\":\"StandardToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":999999999},\"remappings\":[]},\"sources\":{\"@beandao/contracts/interfaces/IBurn.sol\":{\"content\":\"/**\\n * SPDX-License-Identifier: LGPL-3.0-or-later\\n */\\n\\npragma solidity ^0.8.0;\\n\\ninterface IBurn {\\n    function burn(uint256 value) external returns (bool);\\n\\n    function burnFrom(address from, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xd70e0a7fd8459ddef18d3b9f35ce5294db45aa2c127333496c00251bd6e89f4b\",\"license\":\"LGPL-3.0-or-later\"},\"@beandao/contracts/interfaces/IERC165.sol\":{\"content\":\"/**\\n * SPDX-License-Identifier: LGPL-3.0-or-later\\n */\\n\\npragma solidity ^0.8.0;\\n\\ninterface IERC165 {\\n    /// @notice Query if a contract implements an interface\\n    /// @param interfaceID The interface identifier, as specified in ERC-165\\n    /// @dev Interface identification is specified in ERC-165. This function\\n    ///  uses less than 30,000 gas.\\n    /// @return `true` if the contract implements `interfaceID` and\\n    ///  `interfaceID` is not 0xffffffff, `false` otherwise\\n    function supportsInterface(bytes4 interfaceID) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x926a161685c9d85f47e1f40a00c2ec6d724dd40e31075ddadf757b3b919761ac\",\"license\":\"LGPL-3.0-or-later\"},\"@beandao/contracts/interfaces/IERC173.sol\":{\"content\":\"/**\\n * SPDX-License-Identifier: LGPL-3.0-or-later\\n */\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC-173 Contract Ownership Standard\\n * @dev See https://github.com/ethereum/EIPs/blob/master/EIPS/eip-173.md\\n * Note: the ERC-165 identifier for this interface is 0x7f5828d0\\n */\\ninterface IERC173 {\\n    /**\\n     * @dev This emits when ownership of a contract changes.\\n     */\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @notice Get the address of the owner\\n     * @return The address of the owner.\\n     */\\n    function owner() external view returns (address);\\n\\n    /**\\n     * @notice Set the address of the new owner of the contract\\n     * @param newOwner The address of the new owner of the contract\\n     */\\n    function transferOwnership(address newOwner) external;\\n}\\n\",\"keccak256\":\"0x0ba55f97268661fa524bc5f452c53067af5331b82e51cc7f3ce7640897540bf1\",\"license\":\"LGPL-3.0-or-later\"},\"@beandao/contracts/interfaces/IERC20.sol\":{\"content\":\"/**\\n * SPDX-License-Identifier: LGPL-3.0-or-later\\n */\\n\\npragma solidity ^0.8.0;\\n\\ninterface IERC20 {\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function decimals() external view returns (uint8);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 value\\n    ) external returns (bool);\\n\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    function balanceOf(address target) external view returns (uint256);\\n\\n    function allowance(address owner, address spender) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xecd385c0b84b876e7a44b8765e0ad788c7bbde5383c07c650be0476f37e30924\",\"license\":\"LGPL-3.0-or-later\"},\"@beandao/contracts/interfaces/IERC2612.sol\":{\"content\":\"/**\\n * SPDX-License-Identifier: LGPL-3.0-or-later\\n */\\n\\npragma solidity ^0.8.0;\\n\\ninterface IERC2612 {\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n}\\n\",\"keccak256\":\"0x9faef3e44042eefede6210d5b8e7c39a332144324bb45176545c5fcb4723baac\",\"license\":\"LGPL-3.0-or-later\"},\"@beandao/contracts/interfaces/IMint.sol\":{\"content\":\"/**\\n * SPDX-License-Identifier: LGPL-3.0-or-later\\n */\\n\\npragma solidity ^0.8.0;\\n\\ninterface IMint {\\n    function mint(uint256 value) external returns (bool);\\n\\n    function mintTo(address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xea53531303ae9e0139afb196c76b47e96cbc0ffd67b02aa59543e0360ff60056\",\"license\":\"LGPL-3.0-or-later\"},\"@beandao/contracts/interfaces/IMulticall.sol\":{\"content\":\"/**\\n * SPDX-License-Identifier: LGPL-3.0-or-later\\n */\\n\\npragma solidity ^0.8.0;\\n\\ninterface IMulticall {\\n    function multicall(bytes[] calldata callData) external returns (bytes[] memory returnData);\\n}\\n\",\"keccak256\":\"0x5f3a7ed9a0c3e8b4c73341b29cb89c5c19edfb2dd070694ccbde6af9aa45044f\",\"license\":\"LGPL-3.0-or-later\"},\"@beandao/contracts/library/Address.sol\":{\"content\":\"/**\\n * SPDX-License-Identifier: LGPL-3.0-or-later\\n */\\n\\npragma solidity ^0.8.0;\\n\\nlibrary Address {\\n    function isContract(address target) internal view returns (bool result) {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            result := gt(extcodesize(target), 0)\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xb8faa1b47376b255e2f37190ca28a76fd880369c7fcd468cc71fde6fe65d9710\",\"license\":\"LGPL-3.0-or-later\"},\"@beandao/contracts/library/EIP712.sol\":{\"content\":\"/**\\n * SPDX-License-Identifier: LGPL-3.0-or-later\\n */\\n\\npragma solidity ^0.8.0;\\n\\nlibrary EIP712 {\\n    bytes32 internal constant EIP712DOMAIN_TYPEHASH =\\n        keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\");\\n\\n    /**\\n     * @dev Calculates a EIP712 domain separator.\\n     * @param name The EIP712 domain name.\\n     * @param version The EIP712 domain version.\\n     * @param verifyingContract The EIP712 verifying contract.\\n     * @return result EIP712 domain separator.\\n     */\\n    function hashDomainSeperator(\\n        string memory name,\\n        string memory version,\\n        address verifyingContract\\n    ) internal view returns (bytes32 result) {\\n        bytes32 typehash = EIP712DOMAIN_TYPEHASH;\\n\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            let nameHash := keccak256(add(name, 32), mload(name))\\n            let versionHash := keccak256(add(version, 32), mload(version))\\n            let chainId := chainid()\\n\\n            let memPtr := mload(64)\\n\\n            mstore(memPtr, typehash)\\n            mstore(add(memPtr, 32), nameHash)\\n            mstore(add(memPtr, 64), versionHash)\\n            mstore(add(memPtr, 96), chainId)\\n            mstore(add(memPtr, 128), verifyingContract)\\n\\n            result := keccak256(memPtr, 160)\\n        }\\n    }\\n\\n    /**\\n     * @dev Calculates EIP712 encoding for a hash struct with a given domain hash.\\n     * @param domainHash Hash of the domain domain separator data, computed with getDomainHash().\\n     * @param hashStruct The EIP712 hash struct.\\n     * @return result EIP712 hash applied to the given EIP712 Domain.\\n     */\\n    function hashMessage(bytes32 domainHash, bytes32 hashStruct) internal pure returns (bytes32 result) {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            let memPtr := mload(64)\\n\\n            mstore(memPtr, 0x1901000000000000000000000000000000000000000000000000000000000000) // EIP191 header\\n            mstore(add(memPtr, 2), domainHash) // EIP712 domain hash\\n            mstore(add(memPtr, 34), hashStruct) // Hash of struct\\n\\n            result := keccak256(memPtr, 66)\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631052dbc2010d23389446fb4188724caa5e266fdaf811947af6c1d105c483be\",\"license\":\"LGPL-3.0-or-later\"},\"@beandao/contracts/library/ERC20.sol\":{\"content\":\"/**\\n * SPDX-License-Identifier: LGPL-3.0-or-later\\n */\\n\\npragma solidity ^0.8.0;\\n\\nabstract contract ERC20 {\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 value\\n    ) internal virtual;\\n\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal virtual;\\n}\\n\",\"keccak256\":\"0xc7e6facb0e62aba572e70459058234a3349ca97eaf4eeac24e2dfb5bef3f7862\",\"license\":\"LGPL-3.0-or-later\"},\"@beandao/contracts/library/ERC2612.sol\":{\"content\":\"/**\\n * SPDX-License-Identifier: LGPL-3.0-or-later\\n */\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./EIP712.sol\\\";\\nimport {ERC20} from \\\"./ERC20.sol\\\";\\n\\n/**\\n * @title Permit\\n * @notice An alternative to approveWithAuthorization, provided for\\n * compatibility with the draft EIP2612 proposed by Uniswap.\\n * @dev Differences:\\n * - Uses sequential nonce, which restricts transaction submission to one at a\\n *   time, or else it will revert\\n * - Has deadline (= validBefore - 1) but does not have validAfter\\n * - Doesn't have a way to change allowance atomically to prevent ERC20 multiple\\n *   withdrawal attacks\\n */\\nabstract contract ERC2612 is ERC20 {\\n    bytes32 public immutable PERMIT_TYPEHASH =\\n        keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\");\\n\\n    bytes32 public DOMAIN_SEPARATOR;\\n\\n    string public version;\\n\\n    mapping(address => uint256) public nonces;\\n\\n    /**\\n     * @notice Initialize EIP712 Domain Separator\\n     * @param _name        name of contract\\n     * @param _version     version of contract\\n     */\\n    function _initDomainSeparator(string memory _name, string memory _version) internal {\\n        version = _version;\\n        DOMAIN_SEPARATOR = EIP712.hashDomainSeperator(_name, _version, address(this));\\n    }\\n\\n    /**\\n     * @notice Verify a signed approval permit and execute if valid\\n     * @param owner     Token owner's address (Authorizer)\\n     * @param spender   Spender's address\\n     * @param value     Amount of allowance\\n     * @param deadline  The time at which this expires (unix time)\\n     * @param v         v of the signature\\n     * @param r         r of the signature\\n     * @param s         s of the signature\\n     */\\n    function _permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC2612/Invalid-address-0\\\");\\n        require(deadline >= block.timestamp, \\\"ERC2612/Expired-time\\\");\\n\\n        bytes32 digest = EIP712.hashMessage(\\n            DOMAIN_SEPARATOR,\\n            keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline))\\n        );\\n        address recovered = ecrecover(digest, v, r, s);\\n        require(recovered != address(0) && recovered == owner, \\\"ERC2612/Invalid-Signature\\\");\\n\\n        _approve(owner, spender, value);\\n    }\\n}\\n\",\"keccak256\":\"0x261c3a804d9e29c1008eccb11adf2bb960c1d42155b177c3ac661f19b198407f\",\"license\":\"LGPL-3.0-or-later\"},\"@beandao/contracts/library/Initializer.sol\":{\"content\":\"/**\\n * SPDX-License-Identifier: LGPL-3.0-or-later\\n */\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./Address.sol\\\";\\n\\nabstract contract Initializer {\\n    using Address for address;\\n\\n    bool private _initialized;\\n\\n    modifier initializer() {\\n        require(!_initialized || !address(this).isContract(), \\\"Initializer/Already Initialized\\\");\\n        _initialized = true;\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0x141755fb41b1a810fa4f2a6e912ed6390402fe9cd9bdcbad5e96edfcc44ed1d6\",\"license\":\"LGPL-3.0-or-later\"},\"@beandao/contracts/library/Multicall.sol\":{\"content\":\"/**\\n * SPDX-License-Identifier: LGPL-3.0-or-later\\n */\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../interfaces/IMulticall.sol\\\";\\n\\n/**\\n * @title Multicall\\n * @author yoonsung.eth\\n * @notice \\ucee8\\ud2b8\\ub799\\ud2b8\\uac00 \\uac00\\uc9c0\\uace0 \\uc788\\ub294 \\ud2b8\\ub79c\\uc7ad\\uc158\\uc744 \\uc21c\\uc11c\\ub300\\ub85c \\uc2e4\\ud589\\uc2dc\\ud0ac \\uc218 \\uc788\\uc74c.\\n */\\nabstract contract Multicall is IMulticall {\\n    function multicall(bytes[] calldata callData) external override returns (bytes[] memory returnData) {\\n        returnData = new bytes[](callData.length);\\n        for (uint256 i = 0; i < callData.length; i++) {\\n            (bool success, bytes memory result) = address(this).delegatecall(callData[i]);\\n            // Next 5 lines from https://ethereum.stackexchange.com/a/83577\\n            if (!success) {\\n                // revert called without a message\\n                if (result.length < 68) revert();\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    result := add(result, 0x04)\\n                }\\n                revert(abi.decode(result, (string)));\\n            }\\n\\n            returnData[i] = result;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x299ab7b874b9cce8b2d826005fbde9e7e5e06e415922f9e242b6fb3e86dcb914\",\"license\":\"LGPL-3.0-or-later\"},\"@beandao/contracts/library/Ownership.sol\":{\"content\":\"/**\\n * SPDX-License-Identifier: LGPL-3.0-or-later\\n */\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../interfaces/IERC173.sol\\\";\\n\\n/**\\n * @title Ownership\\n * @author yoonsung.eth\\n * @notice \\ub2e8\\uc77c Ownership\\uc744 \\uac00\\uc9c8 \\uc218 \\uc788\\ub3c4\\ub85d \\ub3c4\\uc640\\uc8fc\\ub294 \\ucd94\\uc0c1 \\ucee8\\ud2b8\\ub799\\ud2b8\\n * @dev constructor \\uae30\\ubc18 \\ucee8\\ud2b8\\ub799\\ud2b8\\uc5d0\\uc11c\\ub294 \\uc0dd\\uc131 \\uc2dc\\uc810\\uc5d0 owner\\uac00 msg.sender\\ub85c \\uc9c0\\uc815\\ub418\\uba70,\\n *      Proxy\\ub85c \\uc791\\ub3d9\\ub418\\ub294 \\ucee8\\ud2b8\\ub799\\ud2b8\\uc758 \\uacbd\\uc6b0 `__transferOwnership(address)`\\ub97c \\uba85\\uc2dc\\uc801\\uc73c\\ub85c \\ud638\\ucd9c\\ud558\\uc5ec owner\\ub97c \\uc9c0\\uc815\\ud558\\uc5ec\\uc57c \\ud55c\\ub2e4.\\n */\\nabstract contract Ownership is IERC173 {\\n    address public override owner;\\n\\n    modifier onlyOwner() {\\n        require(owner == msg.sender, \\\"Ownership/Not-Authorized\\\");\\n        _;\\n    }\\n\\n    constructor() {\\n        owner = msg.sender;\\n        emit OwnershipTransferred(address(0), msg.sender);\\n    }\\n\\n    function transferOwnership(address newOwner) external virtual override onlyOwner {\\n        require(newOwner != address(0), \\\"Ownership/Not-Allowed-Zero\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    function resignOwnership() external virtual onlyOwner {\\n        delete owner;\\n        emit OwnershipTransferred(msg.sender, address(0));\\n    }\\n\\n    function _transferOwnership(address newOwner) internal {\\n        address prev = owner;\\n        owner = newOwner;\\n        emit OwnershipTransferred(prev, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x6d58adf2a3a2e93b54f9f34fdffdcec669dbd6985c5de884dbb321fc0d5a7385\",\"license\":\"LGPL-3.0-or-later\"},\"contracts/templates/StandardToken.sol\":{\"content\":\"/**\\n * SPDX-License-Identifier: LGPL-3.0-or-later\\n */\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@beandao/contracts/library/Initializer.sol\\\";\\nimport \\\"@beandao/contracts/library/Ownership.sol\\\";\\nimport \\\"@beandao/contracts/library/Multicall.sol\\\";\\nimport \\\"@beandao/contracts/library/ERC2612.sol\\\";\\nimport \\\"@beandao/contracts/interfaces/IMulticall.sol\\\";\\nimport \\\"@beandao/contracts/interfaces/IMint.sol\\\";\\nimport \\\"@beandao/contracts/interfaces/IBurn.sol\\\";\\nimport \\\"@beandao/contracts/interfaces/IERC2612.sol\\\";\\nimport \\\"@beandao/contracts/interfaces/IERC165.sol\\\";\\nimport \\\"@beandao/contracts/interfaces/IERC173.sol\\\";\\nimport \\\"@beandao/contracts/interfaces/IERC20.sol\\\";\\n\\ncontract StandardToken is\\n    IERC20,\\n    IERC2612,\\n    IBurn,\\n    IMint,\\n    IERC165,\\n    IERC173,\\n    IMulticall,\\n    ERC2612,\\n    Multicall,\\n    Ownership,\\n    Initializer\\n{\\n    string public override name;\\n    string public override symbol;\\n    uint8 public override decimals;\\n    uint256 public override totalSupply;\\n\\n    mapping(address => uint256) public override balanceOf;\\n    mapping(address => mapping(address => uint256)) public override allowance;\\n\\n    function initialize(\\n        string memory contractVersion,\\n        string memory tokenName,\\n        string memory tokenSymbol,\\n        uint8 tokenDecimals\\n    ) external initializer {\\n        _transferOwnership(msg.sender);\\n        ERC2612._initDomainSeparator(contractVersion, tokenName);\\n        name = tokenName;\\n        symbol = tokenSymbol;\\n        decimals = tokenDecimals;\\n        balanceOf[address(this)] = type(uint256).max;\\n    }\\n\\n    function approve(address spender, uint256 value) external override returns (bool) {\\n        _approve(msg.sender, spender, value);\\n        return true;\\n    }\\n\\n    function transfer(address to, uint256 value) external override returns (bool) {\\n        _transfer(msg.sender, to, value);\\n        return true;\\n    }\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 value\\n    ) external override returns (bool) {\\n        allowance[from][msg.sender] -= value;\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @notice Update allowance with a signed permit\\n     * @param _owner       Token owner's address (Authorizer)\\n     * @param spender     Spender's address\\n     * @param value       Amount of allowance\\n     * @param deadline    Expiration time, seconds since the epoch\\n     * @param v           v of the signature\\n     * @param r           r of the signature\\n     * @param s           s of the signature\\n     */\\n    function permit(\\n        address _owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external override {\\n        _permit(_owner, spender, value, deadline, v, r, s);\\n    }\\n\\n    function mint(uint256 value) external override onlyOwner returns (bool) {\\n        balanceOf[msg.sender] += value;\\n        totalSupply += value;\\n        emit Transfer(address(0), msg.sender, value);\\n        return true;\\n    }\\n\\n    function mintTo(address to, uint256 value) external override onlyOwner returns (bool) {\\n        balanceOf[to] += value;\\n        totalSupply += value;\\n        emit Transfer(address(0), to, value);\\n        return true;\\n    }\\n\\n    function burn(uint256 value) external override onlyOwner returns (bool) {\\n        balanceOf[msg.sender] -= value;\\n        totalSupply -= value;\\n        emit Transfer(msg.sender, address(0), value);\\n        return true;\\n    }\\n\\n    function burnFrom(address from, uint256 value) external override onlyOwner returns (bool) {\\n        allowance[from][msg.sender] -= value;\\n        balanceOf[from] -= value;\\n        totalSupply = totalSupply - value;\\n        emit Transfer(from, address(0), value);\\n        return true;\\n    }\\n\\n    function supportsInterface(bytes4 interfaceId) external pure override returns (bool) {\\n        return\\n            // ERC20\\n            interfaceId == type(IERC20).interfaceId ||\\n            interfaceId == type(IMint).interfaceId ||\\n            interfaceId == type(IBurn).interfaceId ||\\n            // ERC2612\\n            interfaceId == type(IERC2612).interfaceId ||\\n            // ITemplateV1(ERC165, ERC173, IMulticall)\\n            interfaceId == type(IERC165).interfaceId ||\\n            interfaceId == type(IERC173).interfaceId ||\\n            interfaceId == type(IMulticall).interfaceId;\\n    }\\n\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal override {\\n        balanceOf[from] -= value;\\n        balanceOf[to] += value;\\n        emit Transfer(from, to, value);\\n    }\\n\\n    function _approve(\\n        address _owner,\\n        address spender,\\n        uint256 value\\n    ) internal override {\\n        require(spender != address(this), \\\"ERC20/Impossible-Approve-to-Self\\\");\\n        allowance[_owner][spender] = value;\\n        emit Approval(_owner, spender, value);\\n    }\\n}\\n\",\"keccak256\":\"0xfcffe632c2628d0fe88d0be021ffaf9b4d451ed9ae479e60cb178d4523ef6019\",\"license\":\"LGPL-3.0-or-later\"}},\"version\":1}",
  "bytecode": "0x60a06040527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960805234801561003457600080fd5b50600380546001600160a01b031916339081179091556040516000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3608051611e2a6100976000396000818161021c01526113690152611e2a6000f3fe608060405234801561001057600080fd5b50600436106101985760003560e01c806379cc6790116100e3578063ac9650d81161008c578063ed0c709111610066578063ed0c7091146103ba578063ed5c475b146103c2578063f2fde38b146103d557600080fd5b8063ac9650d81461035a578063d505accf1461037a578063dd62ed3e1461038f57600080fd5b806395d89b41116100bd57806395d89b411461032c578063a0712d6814610334578063a9059cbb1461034757600080fd5b806379cc6790146102b45780637ecebe00146102c75780638da5cb5b146102e757600080fd5b8063313ce56711610145578063449a52f81161011f578063449a52f81461027957806354fd4d501461028c57806370a082311461029457600080fd5b8063313ce5671461023e5780633644e5151461025d57806342966c681461026657600080fd5b806318160ddd1161017657806318160ddd146101ed57806323b872dd1461020457806330adf81f1461021757600080fd5b806301ffc9a71461019d57806306fdde03146101c5578063095ea7b3146101da575b600080fd5b6101b06101ab366004611922565b6103e8565b60405190151581526020015b60405180910390f35b6101cd6105fd565b6040516101bc9190611b67565b6101b06101e8366004611883565b61068b565b6101f660075481565b6040519081526020016101bc565b6101b06102123660046117dd565b6106a1565b6101f67f000000000000000000000000000000000000000000000000000000000000000081565b60065461024b9060ff1681565b60405160ff90911681526020016101bc565b6101f660005481565b6101b0610274366004611a74565b6106fe565b6101b0610287366004611883565b610806565b6101cd610935565b6101f66102a2366004611788565b60086020526000908152604090205481565b6101b06102c2366004611883565b610942565b6101f66102d5366004611788565b60026020526000908152604090205481565b6003546103079073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101bc565b6101cd610aa1565b6101b0610342366004611a74565b610aae565b6101b0610355366004611883565b610ba4565b61036d6103683660046118ad565b610bb1565b6040516101bc9190611ae7565b61038d610388366004611819565b610d23565b005b6101f661039d3660046117aa565b600960209081526000928352604080842090915290825290205481565b61038d610d3b565b61038d6103d03660046119db565b610e13565b61038d6103e3366004611788565b610f85565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f942e8b2200000000000000000000000000000000000000000000000000000000148061047b57507fffffffff0000000000000000000000000000000000000000000000000000000082167fe4eb7f9000000000000000000000000000000000000000000000000000000000145b806104c757507fffffffff0000000000000000000000000000000000000000000000000000000082167f3b5a0bf800000000000000000000000000000000000000000000000000000000145b8061051357507fffffffff0000000000000000000000000000000000000000000000000000000082167fd505accf00000000000000000000000000000000000000000000000000000000145b8061055f57507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b806105ab57507fffffffff0000000000000000000000000000000000000000000000000000000082167f7f5828d000000000000000000000000000000000000000000000000000000000145b806105f757507fffffffff0000000000000000000000000000000000000000000000000000000082167fac9650d800000000000000000000000000000000000000000000000000000000145b92915050565b6004805461060a90611cda565b80601f016020809104026020016040519081016040528092919081815260200182805461063690611cda565b80156106835780601f1061065857610100808354040283529160200191610683565b820191906000526020600020905b81548152906001019060200180831161066657829003601f168201915b505050505081565b600061069833848461108f565b50600192915050565b73ffffffffffffffffffffffffffffffffffffffff831660009081526009602090815260408083203384529091528120805483919083906106e3908490611c93565b909155506106f4905084848461117e565b5060019392505050565b60035460009073ffffffffffffffffffffffffffffffffffffffff163314610787576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4f776e6572736869702f4e6f742d417574686f72697a6564000000000000000060448201526064015b60405180910390fd5b33600090815260086020526040812080548492906107a6908490611c93565b9250508190555081600760008282546107bf9190611c93565b909155505060405182815260009033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020015b60405180910390a35060015b919050565b60035460009073ffffffffffffffffffffffffffffffffffffffff16331461088a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4f776e6572736869702f4e6f742d417574686f72697a65640000000000000000604482015260640161077e565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260086020526040812080548492906108bf908490611c7b565b9250508190555081600760008282546108d89190611c7b565b909155505060405182815273ffffffffffffffffffffffffffffffffffffffff8416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020015b60405180910390a350600192915050565b6001805461060a90611cda565b60035460009073ffffffffffffffffffffffffffffffffffffffff1633146109c6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4f776e6572736869702f4e6f742d417574686f72697a65640000000000000000604482015260640161077e565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260096020908152604080832033845290915281208054849290610a06908490611c93565b909155505073ffffffffffffffffffffffffffffffffffffffff831660009081526008602052604081208054849290610a40908490611c93565b9091555050600754610a53908390611c93565b60075560405182815260009073ffffffffffffffffffffffffffffffffffffffff8516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610924565b6005805461060a90611cda565b60035460009073ffffffffffffffffffffffffffffffffffffffff163314610b32576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4f776e6572736869702f4e6f742d417574686f72697a65640000000000000000604482015260640161077e565b3360009081526008602052604081208054849290610b51908490611c7b565b925050819055508160076000828254610b6a9190611c7b565b909155505060405182815233906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016107f5565b600061069833848461117e565b60608167ffffffffffffffff811115610bcc57610bcc611dc5565b604051908082528060200260200182016040528015610bff57816020015b6060815260200190600190039081610bea5790505b50905060005b82811015610d1c5760008030868685818110610c2357610c23611d96565b9050602002810190610c359190611b7a565b604051610c43929190611ad7565b600060405180830381855af49150503d8060008114610c7e576040519150601f19603f3d011682016040523d82523d6000602084013e610c83565b606091505b509150915081610ce957604481511015610c9c57600080fd5b60048101905080806020019051810190610cb69190611964565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077e9190611b67565b80848481518110610cfc57610cfc611d96565b602002602001018190525050508080610d1490611d2e565b915050610c05565b5092915050565b610d3287878787878787611253565b50505050505050565b60035473ffffffffffffffffffffffffffffffffffffffff163314610dbc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4f776e6572736869702f4e6f742d417574686f72697a65640000000000000000604482015260640161077e565b600380547fffffffffffffffffffffffff000000000000000000000000000000000000000016905560405160009033907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3565b60035474010000000000000000000000000000000000000000900460ff161580610e3c5750303b155b610ea2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f496e697469616c697a65722f416c726561647920496e697469616c697a656400604482015260640161077e565b600380547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000179055610eea33611581565b610ef484846115f8565b8251610f07906004906020860190611664565b508151610f1b906005906020850190611664565b50600680547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660ff9290921691909117905550503060009081526008602052604090207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff905550565b60035473ffffffffffffffffffffffffffffffffffffffff163314611006576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4f776e6572736869702f4e6f742d417574686f72697a65640000000000000000604482015260640161077e565b73ffffffffffffffffffffffffffffffffffffffff8116611083576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f4f776e6572736869702f4e6f742d416c6c6f7765642d5a65726f000000000000604482015260640161077e565b61108c81611581565b50565b73ffffffffffffffffffffffffffffffffffffffff821630141561110f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f45524332302f496d706f737369626c652d417070726f76652d746f2d53656c66604482015260640161077e565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526009602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260086020526040812080548392906111b3908490611c93565b909155505073ffffffffffffffffffffffffffffffffffffffff8216600090815260086020526040812080548392906111ed908490611c7b565b925050819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161117191815260200190565b73ffffffffffffffffffffffffffffffffffffffff87166112d0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f455243323631322f496e76616c69642d616464726573732d3000000000000000604482015260640161077e565b4284101561133a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f455243323631322f457870697265642d74696d65000000000000000000000000604482015260640161077e565b6000805473ffffffffffffffffffffffffffffffffffffffff89168252600260205260408220805461143292917f0000000000000000000000000000000000000000000000000000000000000000918c918c918c918861139983611d2e565b9091555060408051602081019690965273ffffffffffffffffffffffffffffffffffffffff94851690860152929091166060840152608083015260a082015260c0810188905260e001604051602081830303815290604052805190602001206040517f19010000000000000000000000000000000000000000000000000000000000008152600281019290925260228201526042902090565b6040805160008082526020820180845284905260ff88169282019290925260608101869052608081018590529192509060019060a0016020604051602081039080840390855afa15801561148a573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff81161580159061150557508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b61156b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f455243323631322f496e76616c69642d5369676e617475726500000000000000604482015260640161077e565b61157689898961108f565b505050505050505050565b6003805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b805161160b906001906020840190611664565b508151602092830120815191830191909120604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8152938401929092529082015246606082015230608082015260a09020600055565b82805461167090611cda565b90600052602060002090601f01602090048101928261169257600085556116d8565b82601f106116ab57805160ff19168380011785556116d8565b828001600101855582156116d8579182015b828111156116d85782518255916020019190600101906116bd565b506116e49291506116e8565b5090565b5b808211156116e457600081556001016116e9565b803573ffffffffffffffffffffffffffffffffffffffff8116811461080157600080fd5b600082601f83011261173257600080fd5b813561174561174082611c35565b611be6565b81815284602083860101111561175a57600080fd5b816020850160208301376000918101602001919091529392505050565b803560ff8116811461080157600080fd5b60006020828403121561179a57600080fd5b6117a3826116fd565b9392505050565b600080604083850312156117bd57600080fd5b6117c6836116fd565b91506117d4602084016116fd565b90509250929050565b6000806000606084860312156117f257600080fd5b6117fb846116fd565b9250611809602085016116fd565b9150604084013590509250925092565b600080600080600080600060e0888a03121561183457600080fd5b61183d886116fd565b965061184b602089016116fd565b9550604088013594506060880135935061186760808901611777565b925060a0880135915060c0880135905092959891949750929550565b6000806040838503121561189657600080fd5b61189f836116fd565b946020939093013593505050565b600080602083850312156118c057600080fd5b823567ffffffffffffffff808211156118d857600080fd5b818501915085601f8301126118ec57600080fd5b8135818111156118fb57600080fd5b8660208260051b850101111561191057600080fd5b60209290920196919550909350505050565b60006020828403121561193457600080fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146117a357600080fd5b60006020828403121561197657600080fd5b815167ffffffffffffffff81111561198d57600080fd5b8201601f8101841361199e57600080fd5b80516119ac61174082611c35565b8181528560208385010111156119c157600080fd5b6119d2826020830160208601611caa565b95945050505050565b600080600080608085870312156119f157600080fd5b843567ffffffffffffffff80821115611a0957600080fd5b611a1588838901611721565b95506020870135915080821115611a2b57600080fd5b611a3788838901611721565b94506040870135915080821115611a4d57600080fd5b50611a5a87828801611721565b925050611a6960608601611777565b905092959194509250565b600060208284031215611a8657600080fd5b5035919050565b60008151808452611aa5816020860160208601611caa565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b8183823760009101908152919050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611b5a577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452611b48858351611a8d565b94509285019290850190600101611b0e565b5092979650505050505050565b6020815260006117a36020830184611a8d565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611baf57600080fd5b83018035915067ffffffffffffffff821115611bca57600080fd5b602001915036819003821315611bdf57600080fd5b9250929050565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611c2d57611c2d611dc5565b604052919050565b600067ffffffffffffffff821115611c4f57611c4f611dc5565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b60008219821115611c8e57611c8e611d67565b500190565b600082821015611ca557611ca5611d67565b500390565b60005b83811015611cc5578181015183820152602001611cad565b83811115611cd4576000848401525b50505050565b600181811c90821680611cee57607f821691505b60208210811415611d28577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611d6057611d60611d67565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea264697066735822122023b179fab57f94923e01b94d7a2fe6fbfb07ca379ac0a201b58c82281b9cbb0764736f6c63430008070033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101985760003560e01c806379cc6790116100e3578063ac9650d81161008c578063ed0c709111610066578063ed0c7091146103ba578063ed5c475b146103c2578063f2fde38b146103d557600080fd5b8063ac9650d81461035a578063d505accf1461037a578063dd62ed3e1461038f57600080fd5b806395d89b41116100bd57806395d89b411461032c578063a0712d6814610334578063a9059cbb1461034757600080fd5b806379cc6790146102b45780637ecebe00146102c75780638da5cb5b146102e757600080fd5b8063313ce56711610145578063449a52f81161011f578063449a52f81461027957806354fd4d501461028c57806370a082311461029457600080fd5b8063313ce5671461023e5780633644e5151461025d57806342966c681461026657600080fd5b806318160ddd1161017657806318160ddd146101ed57806323b872dd1461020457806330adf81f1461021757600080fd5b806301ffc9a71461019d57806306fdde03146101c5578063095ea7b3146101da575b600080fd5b6101b06101ab366004611922565b6103e8565b60405190151581526020015b60405180910390f35b6101cd6105fd565b6040516101bc9190611b67565b6101b06101e8366004611883565b61068b565b6101f660075481565b6040519081526020016101bc565b6101b06102123660046117dd565b6106a1565b6101f67f000000000000000000000000000000000000000000000000000000000000000081565b60065461024b9060ff1681565b60405160ff90911681526020016101bc565b6101f660005481565b6101b0610274366004611a74565b6106fe565b6101b0610287366004611883565b610806565b6101cd610935565b6101f66102a2366004611788565b60086020526000908152604090205481565b6101b06102c2366004611883565b610942565b6101f66102d5366004611788565b60026020526000908152604090205481565b6003546103079073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101bc565b6101cd610aa1565b6101b0610342366004611a74565b610aae565b6101b0610355366004611883565b610ba4565b61036d6103683660046118ad565b610bb1565b6040516101bc9190611ae7565b61038d610388366004611819565b610d23565b005b6101f661039d3660046117aa565b600960209081526000928352604080842090915290825290205481565b61038d610d3b565b61038d6103d03660046119db565b610e13565b61038d6103e3366004611788565b610f85565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f942e8b2200000000000000000000000000000000000000000000000000000000148061047b57507fffffffff0000000000000000000000000000000000000000000000000000000082167fe4eb7f9000000000000000000000000000000000000000000000000000000000145b806104c757507fffffffff0000000000000000000000000000000000000000000000000000000082167f3b5a0bf800000000000000000000000000000000000000000000000000000000145b8061051357507fffffffff0000000000000000000000000000000000000000000000000000000082167fd505accf00000000000000000000000000000000000000000000000000000000145b8061055f57507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b806105ab57507fffffffff0000000000000000000000000000000000000000000000000000000082167f7f5828d000000000000000000000000000000000000000000000000000000000145b806105f757507fffffffff0000000000000000000000000000000000000000000000000000000082167fac9650d800000000000000000000000000000000000000000000000000000000145b92915050565b6004805461060a90611cda565b80601f016020809104026020016040519081016040528092919081815260200182805461063690611cda565b80156106835780601f1061065857610100808354040283529160200191610683565b820191906000526020600020905b81548152906001019060200180831161066657829003601f168201915b505050505081565b600061069833848461108f565b50600192915050565b73ffffffffffffffffffffffffffffffffffffffff831660009081526009602090815260408083203384529091528120805483919083906106e3908490611c93565b909155506106f4905084848461117e565b5060019392505050565b60035460009073ffffffffffffffffffffffffffffffffffffffff163314610787576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4f776e6572736869702f4e6f742d417574686f72697a6564000000000000000060448201526064015b60405180910390fd5b33600090815260086020526040812080548492906107a6908490611c93565b9250508190555081600760008282546107bf9190611c93565b909155505060405182815260009033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020015b60405180910390a35060015b919050565b60035460009073ffffffffffffffffffffffffffffffffffffffff16331461088a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4f776e6572736869702f4e6f742d417574686f72697a65640000000000000000604482015260640161077e565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260086020526040812080548492906108bf908490611c7b565b9250508190555081600760008282546108d89190611c7b565b909155505060405182815273ffffffffffffffffffffffffffffffffffffffff8416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020015b60405180910390a350600192915050565b6001805461060a90611cda565b60035460009073ffffffffffffffffffffffffffffffffffffffff1633146109c6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4f776e6572736869702f4e6f742d417574686f72697a65640000000000000000604482015260640161077e565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260096020908152604080832033845290915281208054849290610a06908490611c93565b909155505073ffffffffffffffffffffffffffffffffffffffff831660009081526008602052604081208054849290610a40908490611c93565b9091555050600754610a53908390611c93565b60075560405182815260009073ffffffffffffffffffffffffffffffffffffffff8516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610924565b6005805461060a90611cda565b60035460009073ffffffffffffffffffffffffffffffffffffffff163314610b32576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4f776e6572736869702f4e6f742d417574686f72697a65640000000000000000604482015260640161077e565b3360009081526008602052604081208054849290610b51908490611c7b565b925050819055508160076000828254610b6a9190611c7b565b909155505060405182815233906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016107f5565b600061069833848461117e565b60608167ffffffffffffffff811115610bcc57610bcc611dc5565b604051908082528060200260200182016040528015610bff57816020015b6060815260200190600190039081610bea5790505b50905060005b82811015610d1c5760008030868685818110610c2357610c23611d96565b9050602002810190610c359190611b7a565b604051610c43929190611ad7565b600060405180830381855af49150503d8060008114610c7e576040519150601f19603f3d011682016040523d82523d6000602084013e610c83565b606091505b509150915081610ce957604481511015610c9c57600080fd5b60048101905080806020019051810190610cb69190611964565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077e9190611b67565b80848481518110610cfc57610cfc611d96565b602002602001018190525050508080610d1490611d2e565b915050610c05565b5092915050565b610d3287878787878787611253565b50505050505050565b60035473ffffffffffffffffffffffffffffffffffffffff163314610dbc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4f776e6572736869702f4e6f742d417574686f72697a65640000000000000000604482015260640161077e565b600380547fffffffffffffffffffffffff000000000000000000000000000000000000000016905560405160009033907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3565b60035474010000000000000000000000000000000000000000900460ff161580610e3c5750303b155b610ea2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f496e697469616c697a65722f416c726561647920496e697469616c697a656400604482015260640161077e565b600380547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000179055610eea33611581565b610ef484846115f8565b8251610f07906004906020860190611664565b508151610f1b906005906020850190611664565b50600680547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660ff9290921691909117905550503060009081526008602052604090207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff905550565b60035473ffffffffffffffffffffffffffffffffffffffff163314611006576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4f776e6572736869702f4e6f742d417574686f72697a65640000000000000000604482015260640161077e565b73ffffffffffffffffffffffffffffffffffffffff8116611083576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f4f776e6572736869702f4e6f742d416c6c6f7765642d5a65726f000000000000604482015260640161077e565b61108c81611581565b50565b73ffffffffffffffffffffffffffffffffffffffff821630141561110f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f45524332302f496d706f737369626c652d417070726f76652d746f2d53656c66604482015260640161077e565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526009602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260086020526040812080548392906111b3908490611c93565b909155505073ffffffffffffffffffffffffffffffffffffffff8216600090815260086020526040812080548392906111ed908490611c7b565b925050819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161117191815260200190565b73ffffffffffffffffffffffffffffffffffffffff87166112d0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f455243323631322f496e76616c69642d616464726573732d3000000000000000604482015260640161077e565b4284101561133a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f455243323631322f457870697265642d74696d65000000000000000000000000604482015260640161077e565b6000805473ffffffffffffffffffffffffffffffffffffffff89168252600260205260408220805461143292917f0000000000000000000000000000000000000000000000000000000000000000918c918c918c918861139983611d2e565b9091555060408051602081019690965273ffffffffffffffffffffffffffffffffffffffff94851690860152929091166060840152608083015260a082015260c0810188905260e001604051602081830303815290604052805190602001206040517f19010000000000000000000000000000000000000000000000000000000000008152600281019290925260228201526042902090565b6040805160008082526020820180845284905260ff88169282019290925260608101869052608081018590529192509060019060a0016020604051602081039080840390855afa15801561148a573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff81161580159061150557508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b61156b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f455243323631322f496e76616c69642d5369676e617475726500000000000000604482015260640161077e565b61157689898961108f565b505050505050505050565b6003805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b805161160b906001906020840190611664565b508151602092830120815191830191909120604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8152938401929092529082015246606082015230608082015260a09020600055565b82805461167090611cda565b90600052602060002090601f01602090048101928261169257600085556116d8565b82601f106116ab57805160ff19168380011785556116d8565b828001600101855582156116d8579182015b828111156116d85782518255916020019190600101906116bd565b506116e49291506116e8565b5090565b5b808211156116e457600081556001016116e9565b803573ffffffffffffffffffffffffffffffffffffffff8116811461080157600080fd5b600082601f83011261173257600080fd5b813561174561174082611c35565b611be6565b81815284602083860101111561175a57600080fd5b816020850160208301376000918101602001919091529392505050565b803560ff8116811461080157600080fd5b60006020828403121561179a57600080fd5b6117a3826116fd565b9392505050565b600080604083850312156117bd57600080fd5b6117c6836116fd565b91506117d4602084016116fd565b90509250929050565b6000806000606084860312156117f257600080fd5b6117fb846116fd565b9250611809602085016116fd565b9150604084013590509250925092565b600080600080600080600060e0888a03121561183457600080fd5b61183d886116fd565b965061184b602089016116fd565b9550604088013594506060880135935061186760808901611777565b925060a0880135915060c0880135905092959891949750929550565b6000806040838503121561189657600080fd5b61189f836116fd565b946020939093013593505050565b600080602083850312156118c057600080fd5b823567ffffffffffffffff808211156118d857600080fd5b818501915085601f8301126118ec57600080fd5b8135818111156118fb57600080fd5b8660208260051b850101111561191057600080fd5b60209290920196919550909350505050565b60006020828403121561193457600080fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146117a357600080fd5b60006020828403121561197657600080fd5b815167ffffffffffffffff81111561198d57600080fd5b8201601f8101841361199e57600080fd5b80516119ac61174082611c35565b8181528560208385010111156119c157600080fd5b6119d2826020830160208601611caa565b95945050505050565b600080600080608085870312156119f157600080fd5b843567ffffffffffffffff80821115611a0957600080fd5b611a1588838901611721565b95506020870135915080821115611a2b57600080fd5b611a3788838901611721565b94506040870135915080821115611a4d57600080fd5b50611a5a87828801611721565b925050611a6960608601611777565b905092959194509250565b600060208284031215611a8657600080fd5b5035919050565b60008151808452611aa5816020860160208601611caa565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b8183823760009101908152919050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611b5a577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452611b48858351611a8d565b94509285019290850190600101611b0e565b5092979650505050505050565b6020815260006117a36020830184611a8d565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611baf57600080fd5b83018035915067ffffffffffffffff821115611bca57600080fd5b602001915036819003821315611bdf57600080fd5b9250929050565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611c2d57611c2d611dc5565b604052919050565b600067ffffffffffffffff821115611c4f57611c4f611dc5565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b60008219821115611c8e57611c8e611d67565b500190565b600082821015611ca557611ca5611d67565b500390565b60005b83811015611cc5578181015183820152602001611cad565b83811115611cd4576000848401525b50505050565b600181811c90821680611cee57607f821691505b60208210811415611d28577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611d6057611d60611d67565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea264697066735822122023b179fab57f94923e01b94d7a2fe6fbfb07ca379ac0a201b58c82281b9cbb0764736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
        "params": {
          "_owner": "Token owner's address (Authorizer)",
          "deadline": "Expiration time, seconds since the epoch",
          "r": "r of the signature",
          "s": "s of the signature",
          "spender": "Spender's address",
          "v": "v of the signature",
          "value": "Amount of allowance"
        }
      },
      "transferOwnership(address)": {
        "params": {
          "newOwner": "The address of the new owner of the contract"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "owner()": {
        "notice": "Get the address of the owner"
      },
      "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
        "notice": "Update allowance with a signed permit"
      },
      "transferOwnership(address)": {
        "notice": "Set the address of the new owner of the contract"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 980,
        "contract": "contracts/templates/StandardToken.sol:StandardToken",
        "label": "DOMAIN_SEPARATOR",
        "offset": 0,
        "slot": "0",
        "type": "t_bytes32"
      },
      {
        "astId": 982,
        "contract": "contracts/templates/StandardToken.sol:StandardToken",
        "label": "version",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 986,
        "contract": "contracts/templates/StandardToken.sol:StandardToken",
        "label": "nonces",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 1709,
        "contract": "contracts/templates/StandardToken.sol:StandardToken",
        "label": "owner",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 1107,
        "contract": "contracts/templates/StandardToken.sol:StandardToken",
        "label": "_initialized",
        "offset": 20,
        "slot": "3",
        "type": "t_bool"
      },
      {
        "astId": 3595,
        "contract": "contracts/templates/StandardToken.sol:StandardToken",
        "label": "name",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 3598,
        "contract": "contracts/templates/StandardToken.sol:StandardToken",
        "label": "symbol",
        "offset": 0,
        "slot": "5",
        "type": "t_string_storage"
      },
      {
        "astId": 3601,
        "contract": "contracts/templates/StandardToken.sol:StandardToken",
        "label": "decimals",
        "offset": 0,
        "slot": "6",
        "type": "t_uint8"
      },
      {
        "astId": 3604,
        "contract": "contracts/templates/StandardToken.sol:StandardToken",
        "label": "totalSupply",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 3609,
        "contract": "contracts/templates/StandardToken.sol:StandardToken",
        "label": "balanceOf",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 3616,
        "contract": "contracts/templates/StandardToken.sol:StandardToken",
        "label": "allowance",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}