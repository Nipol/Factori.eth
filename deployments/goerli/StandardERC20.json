{
  "address": "0xEFAaC24C9E90a31FF29B320C83a872a089aA0BE1",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PERMIT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mintTo",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "callData",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "returnData",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "resignOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x39048f9a634489e1fac4b381b74b751f2b3052c8ba08cd363284ce27b9ca1d1f",
  "receipt": {
    "to": null,
    "from": "0x2e6bE9855A3bF02C73Ba74B7d756a63DB7762238",
    "contractAddress": "0xEFAaC24C9E90a31FF29B320C83a872a089aA0BE1",
    "transactionIndex": 9,
    "gasUsed": "1786767",
    "logsBloom": "0x
    "blockHash": "0x4bf9987a2e45d9d9a0fa767356c123f2bede7623f446307066322e1eb0eedc27",
    "transactionHash": "0x39048f9a634489e1fac4b381b74b751f2b3052c8ba08cd363284ce27b9ca1d1f",
    "logs": [
      {
        "transactionIndex": 9,
        "blockNumber": 6245976,
        "transactionHash": "0x39048f9a634489e1fac4b381b74b751f2b3052c8ba08cd363284ce27b9ca1d1f",
        "address": "0xEFAaC24C9E90a31FF29B320C83a872a089aA0BE1",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000002e6be9855a3bf02c73ba74b7d756a63db7762238"
        ],
        "data": "0x",
        "logIndex": 19,
        "blockHash": "0x4bf9987a2e45d9d9a0fa767356c123f2bede7623f446307066322e1eb0eedc27"
      }
    ],
    "blockNumber": 6245976,
    "cumulativeGasUsed": "12776027",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "9cb17cafb54a33799e572b3a1d761130",
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mintTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"callData\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"returnData\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resignOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"yoonsung.eth\",\"kind\":\"dev\",\"methods\":{\"initialize(bytes)\":{\"params\":{\"data\":\"\\ud1a0\\ud070 \\uc774\\ub984, \\ud1a0\\ud070 \\uc2ec\\ubcfc, \\uc18c\\uc218\\uc810 \\uc815\\ubcf4\\ub97c abi encode \\ud558\\uc5ec, bytes \\ud615\\ud0dc\\ub85c \\uc804\\ub2ec\\ud558\\uc5ec\\uc57c \\ud569\\ub2c8\\ub2e4.\"}},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"deadline\":\"The time at which this expires (unix time)\",\"owner\":\"Token owner's address (Authorizer)\",\"r\":\"r of the signature\",\"s\":\"s of the signature\",\"spender\":\"Spender's address\",\"v\":\"v of the signature\",\"value\":\"Amount of allowance\"}},\"supportsInterface(bytes4)\":{\"details\":\"Interface identification is specified in ERC-165. This function  uses less than 30,000 gas.\",\"params\":{\"interfaceID\":\"The interface identifier, as specified in ERC-165\"},\"returns\":{\"_0\":\"`true` if the contract implements `interfaceID` and  `interfaceID` is not 0xffffffff, `false` otherwise\"}},\"transferOwnership(address)\":{\"params\":{\"newOwner\":\"The address of the new owner of the contract\"}}},\"title\":\"StandardERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"initialize(bytes)\":{\"notice\":\"ERC20\\uc744 \\ucd08\\uae30\\ud654 \\ud569\\ub2c8\\ub2e4. \\ud1a0\\ud070\\uc758 \\uc774\\ub984, \\uc2ec\\ubcfc, \\uc18c\\uc218\\uc810 \\uc815\\ubcf4\\ub97c \\ud544\\uc694\\ub85c \\ud569\\ub2c8\\ub2e4. \\uc774 \\ud568\\uc218\\ub294 \\uc2e4\\ud589\\ub420 \\ub54c \\ub2e8 \\ud55c\\ubc88\\ub9cc \\uc2e4\\ud589\\ub429\\ub2c8\\ub2e4. \\uc774 \\ud568\\uc218\\uac00 \\uc2e4\\ud589\\ub420 \\ub54c \\uc774 \\ud568\\uc218\\ub97c \\uc2e4\\ud589\\ud55c \\ub2f9\\uc0ac\\uc790\\uac00 \\ud574\\ub2f9 \\ucee8\\ud2b8\\ub799\\ud2b8\\uc758 \\uc18c\\uc720\\uad8c\\uc744 \\ubc1b\\uac8c\\ub429\\ub2c8\\ub2e4.\"},\"owner()\":{\"notice\":\"Get the address of the owner\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Verify a signed approval permit and execute if valid\"},\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"},\"transferOwnership(address)\":{\"notice\":\"Set the address of the new owner of the contract\"}},\"notice\":\"ERC20\\uacfc ERC2612\\ub97c \\uae30\\ubcf8\\uc73c\\ub85c, ERC165, ERC173 \\uba85\\uc138\\ub97c \\uad6c\\ud604\\ud558\\uace0 \\uc788\\uc2b5\\ub2c8\\ub2e4.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/tokens/StandardERC20.sol\":\"StandardERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":42069},\"remappings\":[]},\"sources\":{\"@beandao/contracts/interfaces/IBurn.sol\":{\"content\":\"/**\\n * SPDX-License-Identifier: LGPL-3.0-or-later\\n */\\n\\npragma solidity ^0.8.0;\\n\\ninterface IBurn {\\n    function burn(uint256 value) external returns (bool);\\n\\n    function burnFrom(address from, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xd70e0a7fd8459ddef18d3b9f35ce5294db45aa2c127333496c00251bd6e89f4b\",\"license\":\"LGPL-3.0-or-later\"},\"@beandao/contracts/interfaces/IERC165.sol\":{\"content\":\"/**\\n * SPDX-License-Identifier: LGPL-3.0-or-later\\n */\\n\\npragma solidity ^0.8.0;\\n\\ninterface IERC165 {\\n    /// @notice Query if a contract implements an interface\\n    /// @param interfaceID The interface identifier, as specified in ERC-165\\n    /// @dev Interface identification is specified in ERC-165. This function\\n    ///  uses less than 30,000 gas.\\n    /// @return `true` if the contract implements `interfaceID` and\\n    ///  `interfaceID` is not 0xffffffff, `false` otherwise\\n    function supportsInterface(bytes4 interfaceID) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x926a161685c9d85f47e1f40a00c2ec6d724dd40e31075ddadf757b3b919761ac\",\"license\":\"LGPL-3.0-or-later\"},\"@beandao/contracts/interfaces/IERC173.sol\":{\"content\":\"/**\\n * SPDX-License-Identifier: LGPL-3.0-or-later\\n */\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC-173 Contract Ownership Standard\\n * @dev See https://github.com/ethereum/EIPs/blob/master/EIPS/eip-173.md\\n * Note: the ERC-165 identifier for this interface is 0x7f5828d0\\n */\\ninterface IERC173 {\\n    /**\\n     * @dev This emits when ownership of a contract changes.\\n     */\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @notice Get the address of the owner\\n     * @return The address of the owner.\\n     */\\n    function owner() external view returns (address);\\n\\n    /**\\n     * @notice Set the address of the new owner of the contract\\n     * @param newOwner The address of the new owner of the contract\\n     */\\n    function transferOwnership(address newOwner) external;\\n}\\n\",\"keccak256\":\"0x0ba55f97268661fa524bc5f452c53067af5331b82e51cc7f3ce7640897540bf1\",\"license\":\"LGPL-3.0-or-later\"},\"@beandao/contracts/interfaces/IERC20.sol\":{\"content\":\"/**\\n * SPDX-License-Identifier: LGPL-3.0-or-later\\n */\\n\\npragma solidity ^0.8.0;\\n\\ninterface IERC20 {\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function decimals() external view returns (uint8);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 value\\n    ) external returns (bool);\\n\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    function balanceOf(address target) external view returns (uint256);\\n\\n    function allowance(address owner, address spender) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xecd385c0b84b876e7a44b8765e0ad788c7bbde5383c07c650be0476f37e30924\",\"license\":\"LGPL-3.0-or-later\"},\"@beandao/contracts/interfaces/IERC2612.sol\":{\"content\":\"/**\\n * SPDX-License-Identifier: LGPL-3.0-or-later\\n */\\n\\npragma solidity ^0.8.0;\\n\\ninterface IERC2612 {\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n}\\n\",\"keccak256\":\"0x9faef3e44042eefede6210d5b8e7c39a332144324bb45176545c5fcb4723baac\",\"license\":\"LGPL-3.0-or-later\"},\"@beandao/contracts/interfaces/IMint.sol\":{\"content\":\"/**\\n * SPDX-License-Identifier: LGPL-3.0-or-later\\n */\\n\\npragma solidity ^0.8.0;\\n\\ninterface IMint {\\n    function mint(uint256 value) external returns (bool);\\n\\n    function mintTo(address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xea53531303ae9e0139afb196c76b47e96cbc0ffd67b02aa59543e0360ff60056\",\"license\":\"LGPL-3.0-or-later\"},\"@beandao/contracts/interfaces/IMulticall.sol\":{\"content\":\"/**\\n * SPDX-License-Identifier: LGPL-3.0-or-later\\n */\\n\\npragma solidity ^0.8.0;\\n\\ninterface IMulticall {\\n    function multicall(bytes[] calldata callData) external returns (bytes[] memory returnData);\\n}\\n\",\"keccak256\":\"0x5f3a7ed9a0c3e8b4c73341b29cb89c5c19edfb2dd070694ccbde6af9aa45044f\",\"license\":\"LGPL-3.0-or-later\"},\"@beandao/contracts/library/Address.sol\":{\"content\":\"/**\\n * SPDX-License-Identifier: LGPL-3.0-or-later\\n */\\n\\npragma solidity ^0.8.0;\\n\\nlibrary Address {\\n    function isContract(address target) internal view returns (bool result) {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            result := gt(extcodesize(target), 0)\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xb8faa1b47376b255e2f37190ca28a76fd880369c7fcd468cc71fde6fe65d9710\",\"license\":\"LGPL-3.0-or-later\"},\"@beandao/contracts/library/EIP712.sol\":{\"content\":\"/**\\n * SPDX-License-Identifier: LGPL-3.0-or-later\\n */\\n\\npragma solidity ^0.8.0;\\n\\nlibrary EIP712 {\\n    bytes32 internal constant EIP712DOMAIN_TYPEHASH =\\n        keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\");\\n\\n    /**\\n     * @dev Calculates a EIP712 domain separator.\\n     * @param name The EIP712 domain name.\\n     * @param version The EIP712 domain version.\\n     * @param verifyingContract The EIP712 verifying contract.\\n     * @return result EIP712 domain separator.\\n     */\\n    function hashDomainSeperator(\\n        string memory name,\\n        string memory version,\\n        address verifyingContract\\n    ) internal view returns (bytes32 result) {\\n        bytes32 typehash = EIP712DOMAIN_TYPEHASH;\\n\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            let nameHash := keccak256(add(name, 32), mload(name))\\n            let versionHash := keccak256(add(version, 32), mload(version))\\n            let chainId := chainid()\\n\\n            let memPtr := mload(64)\\n\\n            mstore(memPtr, typehash)\\n            mstore(add(memPtr, 32), nameHash)\\n            mstore(add(memPtr, 64), versionHash)\\n            mstore(add(memPtr, 96), chainId)\\n            mstore(add(memPtr, 128), verifyingContract)\\n\\n            result := keccak256(memPtr, 160)\\n        }\\n    }\\n\\n    /**\\n     * @dev Calculates EIP712 encoding for a hash struct with a given domain hash.\\n     * @param domainHash Hash of the domain domain separator data, computed with getDomainHash().\\n     * @param hashStruct The EIP712 hash struct.\\n     * @return result EIP712 hash applied to the given EIP712 Domain.\\n     */\\n    function hashMessage(bytes32 domainHash, bytes32 hashStruct) internal pure returns (bytes32 result) {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            let memPtr := mload(64)\\n\\n            mstore(memPtr, 0x1901000000000000000000000000000000000000000000000000000000000000) // EIP191 header\\n            mstore(add(memPtr, 2), domainHash) // EIP712 domain hash\\n            mstore(add(memPtr, 34), hashStruct) // Hash of struct\\n\\n            result := keccak256(memPtr, 66)\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631052dbc2010d23389446fb4188724caa5e266fdaf811947af6c1d105c483be\",\"license\":\"LGPL-3.0-or-later\"},\"@beandao/contracts/library/ERC20.sol\":{\"content\":\"/**\\n * SPDX-License-Identifier: LGPL-3.0-or-later\\n */\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../interfaces/IERC20.sol\\\";\\n\\nabstract contract ERC20 is IERC20 {\\n    string public name;\\n    string public symbol;\\n    uint8 public decimals;\\n    uint256 public totalSupply;\\n\\n    mapping(address => uint256) public balanceOf;\\n    mapping(address => mapping(address => uint256)) public allowance;\\n\\n    function approve(address spender, uint256 value) external virtual returns (bool) {\\n        _approve(msg.sender, spender, value);\\n        return true;\\n    }\\n\\n    function transfer(address to, uint256 value) external virtual returns (bool) {\\n        _transfer(msg.sender, to, value);\\n        return true;\\n    }\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 value\\n    ) external virtual returns (bool) {\\n        allowance[from][msg.sender] -= value;\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal virtual {\\n        balanceOf[from] -= value;\\n        unchecked {\\n            balanceOf[to] += value;\\n        }\\n        emit Transfer(from, to, value);\\n    }\\n\\n    function _approve(\\n        address _owner,\\n        address spender,\\n        uint256 value\\n    ) internal virtual {\\n        require(spender != address(this), \\\"ERC20/Impossible-Approve-to-Self\\\");\\n        allowance[_owner][spender] = value;\\n        emit Approval(_owner, spender, value);\\n    }\\n}\\n\",\"keccak256\":\"0x1a52eaa549da722061109fb787f1a2223c5f364d7e4d1ddac09483b5507f5c43\",\"license\":\"LGPL-3.0-or-later\"},\"@beandao/contracts/library/ERC2612.sol\":{\"content\":\"/**\\n * SPDX-License-Identifier: LGPL-3.0-or-later\\n */\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./EIP712.sol\\\";\\nimport \\\"../interfaces/IERC2612.sol\\\";\\nimport {ERC20} from \\\"./ERC20.sol\\\";\\n\\n/**\\n * @title Permit\\n * @notice An alternative to approveWithAuthorization, provided for\\n * compatibility with the draft EIP2612 proposed by Uniswap.\\n * @dev Differences:\\n * - Uses sequential nonce, which restricts transaction submission to one at a\\n *   time, or else it will revert\\n * - Has deadline (= validBefore - 1) but does not have validAfter\\n * - Doesn't have a way to change allowance atomically to prevent ERC20 multiple\\n *   withdrawal attacks\\n */\\nabstract contract ERC2612 is ERC20, IERC2612 {\\n    bytes32 public immutable PERMIT_TYPEHASH =\\n        keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\");\\n\\n    bytes32 public DOMAIN_SEPARATOR;\\n\\n    string public version;\\n\\n    mapping(address => uint256) public nonces;\\n\\n    /**\\n     * @notice Initialize EIP712 Domain Separator\\n     * @param _name        name of contract\\n     * @param _version     version of contract\\n     */\\n    function _initDomainSeparator(string memory _name, string memory _version) internal {\\n        version = _version;\\n        DOMAIN_SEPARATOR = EIP712.hashDomainSeperator(_name, _version, address(this));\\n    }\\n\\n    /**\\n     * @notice Verify a signed approval permit and execute if valid\\n     * @param owner     Token owner's address (Authorizer)\\n     * @param spender   Spender's address\\n     * @param value     Amount of allowance\\n     * @param deadline  The time at which this expires (unix time)\\n     * @param v         v of the signature\\n     * @param r         r of the signature\\n     * @param s         s of the signature\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external virtual {\\n        require(owner != address(0), \\\"ERC2612/Invalid-address-0\\\");\\n        require(deadline >= block.timestamp, \\\"ERC2612/Expired-time\\\");\\n\\n        unchecked {\\n            bytes32 digest = EIP712.hashMessage(\\n                DOMAIN_SEPARATOR,\\n                keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline))\\n            );\\n\\n            address recovered = ecrecover(digest, v, r, s);\\n            require(recovered != address(0) && recovered == owner, \\\"ERC2612/Invalid-Signature\\\");\\n        }\\n\\n        _approve(owner, spender, value);\\n    }\\n}\\n\",\"keccak256\":\"0xfaac41bfd9feb6dfa87a9767026607090f87c259040c591ebe5f86e733b84feb\",\"license\":\"LGPL-3.0-or-later\"},\"@beandao/contracts/library/Initializer.sol\":{\"content\":\"/**\\n * SPDX-License-Identifier: LGPL-3.0-or-later\\n */\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./Address.sol\\\";\\n\\nabstract contract Initializer {\\n    using Address for address;\\n\\n    bool private _initialized;\\n\\n    modifier initializer() {\\n        require(!_initialized || !address(this).isContract(), \\\"Initializer/Already Initialized\\\");\\n        _initialized = true;\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0x141755fb41b1a810fa4f2a6e912ed6390402fe9cd9bdcbad5e96edfcc44ed1d6\",\"license\":\"LGPL-3.0-or-later\"},\"@beandao/contracts/library/Multicall.sol\":{\"content\":\"/**\\n * SPDX-License-Identifier: LGPL-3.0-or-later\\n */\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../interfaces/IMulticall.sol\\\";\\n\\n/**\\n * @title Multicall\\n * @author yoonsung.eth\\n * @notice \\ucee8\\ud2b8\\ub799\\ud2b8\\uac00 \\uac00\\uc9c0\\uace0 \\uc788\\ub294 \\ud2b8\\ub79c\\uc7ad\\uc158\\uc744 \\uc21c\\uc11c\\ub300\\ub85c \\uc2e4\\ud589\\uc2dc\\ud0ac \\uc218 \\uc788\\uc74c.\\n */\\nabstract contract Multicall is IMulticall {\\n    function multicall(bytes[] calldata callData) external override returns (bytes[] memory returnData) {\\n        returnData = new bytes[](callData.length);\\n        for (uint256 i = 0; i < callData.length; i++) {\\n            (bool success, bytes memory result) = address(this).delegatecall(callData[i]);\\n            // Next 5 lines from https://ethereum.stackexchange.com/a/83577\\n            if (!success) {\\n                // revert called without a message\\n                if (result.length < 68) revert();\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    result := add(result, 0x04)\\n                }\\n                revert(abi.decode(result, (string)));\\n            }\\n\\n            returnData[i] = result;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x299ab7b874b9cce8b2d826005fbde9e7e5e06e415922f9e242b6fb3e86dcb914\",\"license\":\"LGPL-3.0-or-later\"},\"@beandao/contracts/library/Ownership.sol\":{\"content\":\"/**\\n * SPDX-License-Identifier: LGPL-3.0-or-later\\n */\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../interfaces/IERC173.sol\\\";\\n\\n/**\\n * @title Ownership\\n * @author yoonsung.eth\\n * @notice \\ub2e8\\uc77c Ownership\\uc744 \\uac00\\uc9c8 \\uc218 \\uc788\\ub3c4\\ub85d \\ub3c4\\uc640\\uc8fc\\ub294 \\ucd94\\uc0c1 \\ucee8\\ud2b8\\ub799\\ud2b8\\n * @dev constructor \\uae30\\ubc18 \\ucee8\\ud2b8\\ub799\\ud2b8\\uc5d0\\uc11c\\ub294 \\uc0dd\\uc131 \\uc2dc\\uc810\\uc5d0 owner\\uac00 msg.sender\\ub85c \\uc9c0\\uc815\\ub418\\uba70,\\n *      Proxy\\ub85c \\uc791\\ub3d9\\ub418\\ub294 \\ucee8\\ud2b8\\ub799\\ud2b8\\uc758 \\uacbd\\uc6b0 `__transferOwnership(address)`\\ub97c \\uba85\\uc2dc\\uc801\\uc73c\\ub85c \\ud638\\ucd9c\\ud558\\uc5ec owner\\ub97c \\uc9c0\\uc815\\ud558\\uc5ec\\uc57c \\ud55c\\ub2e4.\\n */\\nabstract contract Ownership is IERC173 {\\n    address public override owner;\\n\\n    modifier onlyOwner() {\\n        require(owner == msg.sender, \\\"Ownership/Not-Authorized\\\");\\n        _;\\n    }\\n\\n    constructor() {\\n        owner = msg.sender;\\n        emit OwnershipTransferred(address(0), msg.sender);\\n    }\\n\\n    function transferOwnership(address newOwner) external virtual override onlyOwner {\\n        require(newOwner != address(0), \\\"Ownership/Not-Allowed-Zero\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    function resignOwnership() external virtual onlyOwner {\\n        delete owner;\\n        emit OwnershipTransferred(msg.sender, address(0));\\n    }\\n\\n    function _transferOwnership(address newOwner) internal {\\n        address prev = owner;\\n        owner = newOwner;\\n        emit OwnershipTransferred(prev, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x6d58adf2a3a2e93b54f9f34fdffdcec669dbd6985c5de884dbb321fc0d5a7385\",\"license\":\"LGPL-3.0-or-later\"},\"contracts/tokens/StandardERC20.sol\":{\"content\":\"/**\\n * SPDX-License-Identifier: LGPL-3.0-or-later\\n */\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@beandao/contracts/interfaces/IMint.sol\\\";\\nimport \\\"@beandao/contracts/interfaces/IBurn.sol\\\";\\nimport \\\"@beandao/contracts/interfaces/IERC165.sol\\\";\\nimport {Initializer} from \\\"@beandao/contracts/library/Initializer.sol\\\";\\nimport {Ownership, IERC173} from \\\"@beandao/contracts/library/Ownership.sol\\\";\\nimport {ERC20, IERC20} from \\\"@beandao/contracts/library/ERC20.sol\\\";\\nimport {ERC2612, IERC2612} from \\\"@beandao/contracts/library/ERC2612.sol\\\";\\nimport {Multicall, IMulticall} from \\\"@beandao/contracts/library/Multicall.sol\\\";\\n\\n/**\\n * @title StandardERC20\\n * @author yoonsung.eth\\n * @notice ERC20\\uacfc ERC2612\\ub97c \\uae30\\ubcf8\\uc73c\\ub85c, ERC165, ERC173 \\uba85\\uc138\\ub97c \\uad6c\\ud604\\ud558\\uace0 \\uc788\\uc2b5\\ub2c8\\ub2e4.\\n */\\ncontract StandardERC20 is ERC20, ERC2612, Ownership, Multicall, Initializer, IERC165, IBurn, IMint {\\n    /**\\n     * @notice ERC20\\uc744 \\ucd08\\uae30\\ud654 \\ud569\\ub2c8\\ub2e4. \\ud1a0\\ud070\\uc758 \\uc774\\ub984, \\uc2ec\\ubcfc, \\uc18c\\uc218\\uc810 \\uc815\\ubcf4\\ub97c \\ud544\\uc694\\ub85c \\ud569\\ub2c8\\ub2e4. \\uc774 \\ud568\\uc218\\ub294 \\uc2e4\\ud589\\ub420 \\ub54c \\ub2e8 \\ud55c\\ubc88\\ub9cc \\uc2e4\\ud589\\ub429\\ub2c8\\ub2e4.\\n     * \\uc774 \\ud568\\uc218\\uac00 \\uc2e4\\ud589\\ub420 \\ub54c \\uc774 \\ud568\\uc218\\ub97c \\uc2e4\\ud589\\ud55c \\ub2f9\\uc0ac\\uc790\\uac00 \\ud574\\ub2f9 \\ucee8\\ud2b8\\ub799\\ud2b8\\uc758 \\uc18c\\uc720\\uad8c\\uc744 \\ubc1b\\uac8c\\ub429\\ub2c8\\ub2e4.\\n     * @param data \\ud1a0\\ud070 \\uc774\\ub984, \\ud1a0\\ud070 \\uc2ec\\ubcfc, \\uc18c\\uc218\\uc810 \\uc815\\ubcf4\\ub97c abi encode \\ud558\\uc5ec, bytes \\ud615\\ud0dc\\ub85c \\uc804\\ub2ec\\ud558\\uc5ec\\uc57c \\ud569\\ub2c8\\ub2e4.\\n     */\\n    function initialize(bytes calldata data) external initializer {\\n        (name, symbol, decimals) = abi.decode(data, (string, string, uint8));\\n        version = \\\"1\\\";\\n        balanceOf[address(this)] = type(uint256).max;\\n        _initDomainSeparator(name, version);\\n        _transferOwnership(msg.sender);\\n    }\\n\\n    function mint(uint256 value) external onlyOwner returns (bool) {\\n        totalSupply += value;\\n        unchecked {\\n            balanceOf[msg.sender] += value;\\n        }\\n        emit Transfer(address(0), msg.sender, value);\\n        return true;\\n    }\\n\\n    function mintTo(address to, uint256 value) external onlyOwner returns (bool) {\\n        totalSupply += value;\\n        balanceOf[to] += value;\\n        emit Transfer(address(0), to, value);\\n        return true;\\n    }\\n\\n    function burn(uint256 value) external onlyOwner returns (bool) {\\n        balanceOf[msg.sender] -= value;\\n        unchecked {\\n            totalSupply -= value;\\n        }\\n        emit Transfer(msg.sender, address(0), value);\\n        return true;\\n    }\\n\\n    function burnFrom(address from, uint256 value) external onlyOwner returns (bool) {\\n        allowance[from][msg.sender] -= value;\\n        balanceOf[from] -= value;\\n        unchecked {\\n            totalSupply -= value;\\n        }\\n        emit Transfer(from, address(0), value);\\n        return true;\\n    }\\n\\n    function supportsInterface(bytes4 interfaceID) external pure returns (bool) {\\n        return\\n            type(IERC20).interfaceId == interfaceID ||\\n            type(IERC2612).interfaceId == interfaceID ||\\n            type(IERC173).interfaceId == interfaceID ||\\n            type(IERC165).interfaceId == interfaceID ||\\n            type(IMulticall).interfaceId == interfaceID ||\\n            type(IBurn).interfaceId == interfaceID ||\\n            type(IMint).interfaceId == interfaceID;\\n    }\\n}\\n\",\"keccak256\":\"0xb5f2488ffc4b8db84efbcef2329250e99fad5388f109639149e6ebe95678e769\",\"license\":\"LGPL-3.0-or-later\"}},\"version\":1}",
  "bytecode": "0x60a06040527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960805234801561003457600080fd5b50600980546001600160a01b031916339081179091556040516000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3608051611f246100976000396000818161021c01526110ea0152611f246000f3fe608060405234801561001057600080fd5b50600436106101985760003560e01c806370a08231116100e3578063a9059cbb1161008c578063dd62ed3e11610066578063dd62ed3e146103a2578063ed0c7091146103cd578063f2fde38b146103d557600080fd5b8063a9059cbb1461035c578063ac9650d81461036f578063d505accf1461038f57600080fd5b80638da5cb5b116100bd5780638da5cb5b146102fc57806395d89b4114610341578063a0712d681461034957600080fd5b806370a08231146102a957806379cc6790146102c95780637ecebe00146102dc57600080fd5b8063313ce56711610145578063439fab911161011f578063439fab9114610279578063449a52f81461028e57806354fd4d50146102a157600080fd5b8063313ce5671461023e5780633644e5151461025d57806342966c681461026657600080fd5b806318160ddd1161017657806318160ddd146101ed57806323b872dd1461020457806330adf81f1461021757600080fd5b806301ffc9a71461019d57806306fdde03146101c5578063095ea7b3146101da575b600080fd5b6101b06101ab3660046117bc565b6103e8565b60405190151581526020015b60405180910390f35b6101cd6105fd565b6040516101bc919061187f565b6101b06101e83660046118b6565b61068b565b6101f660035481565b6040519081526020016101bc565b6101b06102123660046118e0565b6106a1565b6101f67f000000000000000000000000000000000000000000000000000000000000000081565b60025461024b9060ff1681565b60405160ff90911681526020016101bc565b6101f660065481565b6101b061027436600461191c565b6106fe565b61028c610287366004611935565b6107f6565b005b6101b061029c3660046118b6565b610ace565b6101cd610bfb565b6101f66102b73660046119a7565b60046020526000908152604090205481565b6101b06102d73660046118b6565b610c08565b6101f66102ea3660046119a7565b60086020526000908152604090205481565b60095461031c9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101bc565b6101cd610d5f565b6101b061035736600461191c565b610d6c565b6101b061036a3660046118b6565b610e4b565b61038261037d3660046119c2565b610e58565b6040516101bc9190611a25565b61028c61039d366004611ab6565b610fca565b6101f66103b0366004611b20565b600560209081526000928352604080842090915290825290205481565b61028c6112d2565b61028c6103e33660046119a7565b6113aa565b60007f942e8b22000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316148061047b57507fd505accf000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b806104c757507f7f5828d0000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b8061051357507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b8061055f57507fac9650d8000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b806105ab57507f3b5a0bf8000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b806105f757507fe4eb7f90000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b6000805461060a90611b53565b80601f016020809104026020016040519081016040528092919081815260200182805461063690611b53565b80156106835780601f1061065857610100808354040283529160200191610683565b820191906000526020600020905b81548152906001019060200180831161066657829003601f168201915b505050505081565b60006106983384846114b4565b50600192915050565b73ffffffffffffffffffffffffffffffffffffffff831660009081526005602090815260408083203384529091528120805483919083906106e3908490611bd6565b909155506106f490508484846115a3565b5060019392505050565b60095460009073ffffffffffffffffffffffffffffffffffffffff163314610787576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4f776e6572736869702f4e6f742d417574686f72697a6564000000000000000060448201526064015b60405180910390fd5b33600090815260046020526040812080548492906107a6908490611bd6565b909155505060038054839003905560405182815260009033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020015b60405180910390a35060015b919050565b60095474010000000000000000000000000000000000000000900460ff16158061081f5750303b155b610885576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f496e697469616c697a65722f416c726561647920496e697469616c697a656400604482015260640161077e565b600980547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16740100000000000000000000000000000000000000001790556108d081830183611d07565b600280547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660ff831617905581516000908190610915906001906020870190611723565b5050835161092891906020860190611723565b50506040805180820190915260018082527f31000000000000000000000000000000000000000000000000000000000000006020909201918252610970935060079250611723565b503060009081526004602052604081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90558054610ac191906109b390611b53565b80601f01602080910402602001604051908101604052809291908181526020018280546109df90611b53565b8015610a2c5780601f10610a0157610100808354040283529160200191610a2c565b820191906000526020600020905b815481529060010190602001808311610a0f57829003601f168201915b505050505060078054610a3e90611b53565b80601f0160208091040260200160405190810160405280929190818152602001828054610a6a90611b53565b8015610ab75780601f10610a8c57610100808354040283529160200191610ab7565b820191906000526020600020905b815481529060010190602001808311610a9a57829003601f168201915b5050505050611640565b610aca336116ac565b5050565b60095460009073ffffffffffffffffffffffffffffffffffffffff163314610b52576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4f776e6572736869702f4e6f742d417574686f72697a65640000000000000000604482015260640161077e565b8160036000828254610b649190611d7b565b909155505073ffffffffffffffffffffffffffffffffffffffff831660009081526004602052604081208054849290610b9e908490611d7b565b909155505060405182815273ffffffffffffffffffffffffffffffffffffffff8416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020015b60405180910390a350600192915050565b6007805461060a90611b53565b60095460009073ffffffffffffffffffffffffffffffffffffffff163314610c8c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4f776e6572736869702f4e6f742d417574686f72697a65640000000000000000604482015260640161077e565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260056020908152604080832033845290915281208054849290610ccc908490611bd6565b909155505073ffffffffffffffffffffffffffffffffffffffff831660009081526004602052604081208054849290610d06908490611bd6565b909155505060038054839003905560405182815260009073ffffffffffffffffffffffffffffffffffffffff8516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610bea565b6001805461060a90611b53565b60095460009073ffffffffffffffffffffffffffffffffffffffff163314610df0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4f776e6572736869702f4e6f742d417574686f72697a65640000000000000000604482015260640161077e565b8160036000828254610e029190611d7b565b9091555050336000818152600460209081526040808320805487019055518581527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91016107e5565b60006106983384846115a3565b60608167ffffffffffffffff811115610e7357610e73611bed565b604051908082528060200260200182016040528015610ea657816020015b6060815260200190600190039081610e915790505b50905060005b82811015610fc35760008030868685818110610eca57610eca611d93565b9050602002810190610edc9190611dc2565b604051610eea929190611e2e565b600060405180830381855af49150503d8060008114610f25576040519150601f19603f3d011682016040523d82523d6000602084013e610f2a565b606091505b509150915081610f9057604481511015610f4357600080fd5b60048101905080806020019051810190610f5d9190611e3e565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077e919061187f565b80848481518110610fa357610fa3611d93565b602002602001018190525050508080610fbb90611eb5565b915050610eac565b5092915050565b73ffffffffffffffffffffffffffffffffffffffff8716611047576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f455243323631322f496e76616c69642d616464726573732d3000000000000000604482015260640161077e565b428410156110b1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f455243323631322f457870697265642d74696d65000000000000000000000000604482015260640161077e565b60065473ffffffffffffffffffffffffffffffffffffffff888116600081815260086020908152604080832080546001810190915581517f00000000000000000000000000000000000000000000000000000000000000008185015280830195909552948c166060850152608084018b905260a084019490945260c08084018a90528451808503909101815260e084019485905280519101207f1901000000000000000000000000000000000000000000000000000000000000845260e283019490945261010290910192909252604290206040805160008082526020820180845284905260ff88169282019290925260608101869052608081018590529192509060019060a0016020604051602081039080840390855afa1580156111db573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff81161580159061125657508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b6112bc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f455243323631322f496e76616c69642d5369676e617475726500000000000000604482015260640161077e565b50506112c98787876114b4565b50505050505050565b60095473ffffffffffffffffffffffffffffffffffffffff163314611353576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4f776e6572736869702f4e6f742d417574686f72697a65640000000000000000604482015260640161077e565b600980547fffffffffffffffffffffffff000000000000000000000000000000000000000016905560405160009033907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3565b60095473ffffffffffffffffffffffffffffffffffffffff16331461142b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4f776e6572736869702f4e6f742d417574686f72697a65640000000000000000604482015260640161077e565b73ffffffffffffffffffffffffffffffffffffffff81166114a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f4f776e6572736869702f4e6f742d416c6c6f7765642d5a65726f000000000000604482015260640161077e565b6114b1816116ac565b50565b73ffffffffffffffffffffffffffffffffffffffff8216301415611534576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f45524332302f496d706f737369626c652d417070726f76652d746f2d53656c66604482015260640161077e565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526005602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260046020526040812080548392906115d8908490611bd6565b909155505073ffffffffffffffffffffffffffffffffffffffff808316600081815260046020526040908190208054850190555190918516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906115969085815260200190565b8051611653906007906020840190611723565b508151602092830120815191830191909120604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8152938401929092529082015246606082015230608082015260a09020600655565b6009805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b82805461172f90611b53565b90600052602060002090601f0160209004810192826117515760008555611797565b82601f1061176a57805160ff1916838001178555611797565b82800160010185558215611797579182015b8281111561179757825182559160200191906001019061177c565b506117a39291506117a7565b5090565b5b808211156117a357600081556001016117a8565b6000602082840312156117ce57600080fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146117fe57600080fd5b9392505050565b60005b83811015611820578181015183820152602001611808565b8381111561182f576000848401525b50505050565b6000815180845261184d816020860160208601611805565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006117fe6020830184611835565b803573ffffffffffffffffffffffffffffffffffffffff811681146107f157600080fd5b600080604083850312156118c957600080fd5b6118d283611892565b946020939093013593505050565b6000806000606084860312156118f557600080fd5b6118fe84611892565b925061190c60208501611892565b9150604084013590509250925092565b60006020828403121561192e57600080fd5b5035919050565b6000806020838503121561194857600080fd5b823567ffffffffffffffff8082111561196057600080fd5b818501915085601f83011261197457600080fd5b81358181111561198357600080fd5b86602082850101111561199557600080fd5b60209290920196919550909350505050565b6000602082840312156119b957600080fd5b6117fe82611892565b600080602083850312156119d557600080fd5b823567ffffffffffffffff808211156119ed57600080fd5b818501915085601f830112611a0157600080fd5b813581811115611a1057600080fd5b8660208260051b850101111561199557600080fd5b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611a98577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452611a86858351611835565b94509285019290850190600101611a4c565b5092979650505050505050565b803560ff811681146107f157600080fd5b600080600080600080600060e0888a031215611ad157600080fd5b611ada88611892565b9650611ae860208901611892565b95506040880135945060608801359350611b0460808901611aa5565b925060a0880135915060c0880135905092959891949750929550565b60008060408385031215611b3357600080fd5b611b3c83611892565b9150611b4a60208401611892565b90509250929050565b600181811c90821680611b6757607f821691505b60208210811415611ba1577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082821015611be857611be8611ba7565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611c6357611c63611bed565b604052919050565b600067ffffffffffffffff821115611c8557611c85611bed565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f830112611cc257600080fd5b8135611cd5611cd082611c6b565b611c1c565b818152846020838601011115611cea57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600060608486031215611d1c57600080fd5b833567ffffffffffffffff80821115611d3457600080fd5b611d4087838801611cb1565b94506020860135915080821115611d5657600080fd5b50611d6386828701611cb1565b925050611d7260408501611aa5565b90509250925092565b60008219821115611d8e57611d8e611ba7565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611df757600080fd5b83018035915067ffffffffffffffff821115611e1257600080fd5b602001915036819003821315611e2757600080fd5b9250929050565b8183823760009101908152919050565b600060208284031215611e5057600080fd5b815167ffffffffffffffff811115611e6757600080fd5b8201601f81018413611e7857600080fd5b8051611e86611cd082611c6b565b818152856020838501011115611e9b57600080fd5b611eac826020830160208601611805565b95945050505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611ee757611ee7611ba7565b506001019056fea2646970667358221220d32d2b0a862a7434a55f3a4ff7330cb336b891cc17a965515b27480b5ea34b4764736f6c634300080b0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101985760003560e01c806370a08231116100e3578063a9059cbb1161008c578063dd62ed3e11610066578063dd62ed3e146103a2578063ed0c7091146103cd578063f2fde38b146103d557600080fd5b8063a9059cbb1461035c578063ac9650d81461036f578063d505accf1461038f57600080fd5b80638da5cb5b116100bd5780638da5cb5b146102fc57806395d89b4114610341578063a0712d681461034957600080fd5b806370a08231146102a957806379cc6790146102c95780637ecebe00146102dc57600080fd5b8063313ce56711610145578063439fab911161011f578063439fab9114610279578063449a52f81461028e57806354fd4d50146102a157600080fd5b8063313ce5671461023e5780633644e5151461025d57806342966c681461026657600080fd5b806318160ddd1161017657806318160ddd146101ed57806323b872dd1461020457806330adf81f1461021757600080fd5b806301ffc9a71461019d57806306fdde03146101c5578063095ea7b3146101da575b600080fd5b6101b06101ab3660046117bc565b6103e8565b60405190151581526020015b60405180910390f35b6101cd6105fd565b6040516101bc919061187f565b6101b06101e83660046118b6565b61068b565b6101f660035481565b6040519081526020016101bc565b6101b06102123660046118e0565b6106a1565b6101f67f000000000000000000000000000000000000000000000000000000000000000081565b60025461024b9060ff1681565b60405160ff90911681526020016101bc565b6101f660065481565b6101b061027436600461191c565b6106fe565b61028c610287366004611935565b6107f6565b005b6101b061029c3660046118b6565b610ace565b6101cd610bfb565b6101f66102b73660046119a7565b60046020526000908152604090205481565b6101b06102d73660046118b6565b610c08565b6101f66102ea3660046119a7565b60086020526000908152604090205481565b60095461031c9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101bc565b6101cd610d5f565b6101b061035736600461191c565b610d6c565b6101b061036a3660046118b6565b610e4b565b61038261037d3660046119c2565b610e58565b6040516101bc9190611a25565b61028c61039d366004611ab6565b610fca565b6101f66103b0366004611b20565b600560209081526000928352604080842090915290825290205481565b61028c6112d2565b61028c6103e33660046119a7565b6113aa565b60007f942e8b22000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316148061047b57507fd505accf000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b806104c757507f7f5828d0000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b8061051357507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b8061055f57507fac9650d8000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b806105ab57507f3b5a0bf8000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b806105f757507fe4eb7f90000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b6000805461060a90611b53565b80601f016020809104026020016040519081016040528092919081815260200182805461063690611b53565b80156106835780601f1061065857610100808354040283529160200191610683565b820191906000526020600020905b81548152906001019060200180831161066657829003601f168201915b505050505081565b60006106983384846114b4565b50600192915050565b73ffffffffffffffffffffffffffffffffffffffff831660009081526005602090815260408083203384529091528120805483919083906106e3908490611bd6565b909155506106f490508484846115a3565b5060019392505050565b60095460009073ffffffffffffffffffffffffffffffffffffffff163314610787576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4f776e6572736869702f4e6f742d417574686f72697a6564000000000000000060448201526064015b60405180910390fd5b33600090815260046020526040812080548492906107a6908490611bd6565b909155505060038054839003905560405182815260009033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020015b60405180910390a35060015b919050565b60095474010000000000000000000000000000000000000000900460ff16158061081f5750303b155b610885576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f496e697469616c697a65722f416c726561647920496e697469616c697a656400604482015260640161077e565b600980547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16740100000000000000000000000000000000000000001790556108d081830183611d07565b600280547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660ff831617905581516000908190610915906001906020870190611723565b5050835161092891906020860190611723565b50506040805180820190915260018082527f31000000000000000000000000000000000000000000000000000000000000006020909201918252610970935060079250611723565b503060009081526004602052604081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90558054610ac191906109b390611b53565b80601f01602080910402602001604051908101604052809291908181526020018280546109df90611b53565b8015610a2c5780601f10610a0157610100808354040283529160200191610a2c565b820191906000526020600020905b815481529060010190602001808311610a0f57829003601f168201915b505050505060078054610a3e90611b53565b80601f0160208091040260200160405190810160405280929190818152602001828054610a6a90611b53565b8015610ab75780601f10610a8c57610100808354040283529160200191610ab7565b820191906000526020600020905b815481529060010190602001808311610a9a57829003601f168201915b5050505050611640565b610aca336116ac565b5050565b60095460009073ffffffffffffffffffffffffffffffffffffffff163314610b52576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4f776e6572736869702f4e6f742d417574686f72697a65640000000000000000604482015260640161077e565b8160036000828254610b649190611d7b565b909155505073ffffffffffffffffffffffffffffffffffffffff831660009081526004602052604081208054849290610b9e908490611d7b565b909155505060405182815273ffffffffffffffffffffffffffffffffffffffff8416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020015b60405180910390a350600192915050565b6007805461060a90611b53565b60095460009073ffffffffffffffffffffffffffffffffffffffff163314610c8c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4f776e6572736869702f4e6f742d417574686f72697a65640000000000000000604482015260640161077e565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260056020908152604080832033845290915281208054849290610ccc908490611bd6565b909155505073ffffffffffffffffffffffffffffffffffffffff831660009081526004602052604081208054849290610d06908490611bd6565b909155505060038054839003905560405182815260009073ffffffffffffffffffffffffffffffffffffffff8516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610bea565b6001805461060a90611b53565b60095460009073ffffffffffffffffffffffffffffffffffffffff163314610df0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4f776e6572736869702f4e6f742d417574686f72697a65640000000000000000604482015260640161077e565b8160036000828254610e029190611d7b565b9091555050336000818152600460209081526040808320805487019055518581527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91016107e5565b60006106983384846115a3565b60608167ffffffffffffffff811115610e7357610e73611bed565b604051908082528060200260200182016040528015610ea657816020015b6060815260200190600190039081610e915790505b50905060005b82811015610fc35760008030868685818110610eca57610eca611d93565b9050602002810190610edc9190611dc2565b604051610eea929190611e2e565b600060405180830381855af49150503d8060008114610f25576040519150601f19603f3d011682016040523d82523d6000602084013e610f2a565b606091505b509150915081610f9057604481511015610f4357600080fd5b60048101905080806020019051810190610f5d9190611e3e565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077e919061187f565b80848481518110610fa357610fa3611d93565b602002602001018190525050508080610fbb90611eb5565b915050610eac565b5092915050565b73ffffffffffffffffffffffffffffffffffffffff8716611047576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f455243323631322f496e76616c69642d616464726573732d3000000000000000604482015260640161077e565b428410156110b1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f455243323631322f457870697265642d74696d65000000000000000000000000604482015260640161077e565b60065473ffffffffffffffffffffffffffffffffffffffff888116600081815260086020908152604080832080546001810190915581517f00000000000000000000000000000000000000000000000000000000000000008185015280830195909552948c166060850152608084018b905260a084019490945260c08084018a90528451808503909101815260e084019485905280519101207f1901000000000000000000000000000000000000000000000000000000000000845260e283019490945261010290910192909252604290206040805160008082526020820180845284905260ff88169282019290925260608101869052608081018590529192509060019060a0016020604051602081039080840390855afa1580156111db573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff81161580159061125657508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b6112bc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f455243323631322f496e76616c69642d5369676e617475726500000000000000604482015260640161077e565b50506112c98787876114b4565b50505050505050565b60095473ffffffffffffffffffffffffffffffffffffffff163314611353576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4f776e6572736869702f4e6f742d417574686f72697a65640000000000000000604482015260640161077e565b600980547fffffffffffffffffffffffff000000000000000000000000000000000000000016905560405160009033907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3565b60095473ffffffffffffffffffffffffffffffffffffffff16331461142b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4f776e6572736869702f4e6f742d417574686f72697a65640000000000000000604482015260640161077e565b73ffffffffffffffffffffffffffffffffffffffff81166114a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f4f776e6572736869702f4e6f742d416c6c6f7765642d5a65726f000000000000604482015260640161077e565b6114b1816116ac565b50565b73ffffffffffffffffffffffffffffffffffffffff8216301415611534576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f45524332302f496d706f737369626c652d417070726f76652d746f2d53656c66604482015260640161077e565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526005602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260046020526040812080548392906115d8908490611bd6565b909155505073ffffffffffffffffffffffffffffffffffffffff808316600081815260046020526040908190208054850190555190918516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906115969085815260200190565b8051611653906007906020840190611723565b508151602092830120815191830191909120604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8152938401929092529082015246606082015230608082015260a09020600655565b6009805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b82805461172f90611b53565b90600052602060002090601f0160209004810192826117515760008555611797565b82601f1061176a57805160ff1916838001178555611797565b82800160010185558215611797579182015b8281111561179757825182559160200191906001019061177c565b506117a39291506117a7565b5090565b5b808211156117a357600081556001016117a8565b6000602082840312156117ce57600080fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146117fe57600080fd5b9392505050565b60005b83811015611820578181015183820152602001611808565b8381111561182f576000848401525b50505050565b6000815180845261184d816020860160208601611805565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006117fe6020830184611835565b803573ffffffffffffffffffffffffffffffffffffffff811681146107f157600080fd5b600080604083850312156118c957600080fd5b6118d283611892565b946020939093013593505050565b6000806000606084860312156118f557600080fd5b6118fe84611892565b925061190c60208501611892565b9150604084013590509250925092565b60006020828403121561192e57600080fd5b5035919050565b6000806020838503121561194857600080fd5b823567ffffffffffffffff8082111561196057600080fd5b818501915085601f83011261197457600080fd5b81358181111561198357600080fd5b86602082850101111561199557600080fd5b60209290920196919550909350505050565b6000602082840312156119b957600080fd5b6117fe82611892565b600080602083850312156119d557600080fd5b823567ffffffffffffffff808211156119ed57600080fd5b818501915085601f830112611a0157600080fd5b813581811115611a1057600080fd5b8660208260051b850101111561199557600080fd5b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611a98577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452611a86858351611835565b94509285019290850190600101611a4c565b5092979650505050505050565b803560ff811681146107f157600080fd5b600080600080600080600060e0888a031215611ad157600080fd5b611ada88611892565b9650611ae860208901611892565b95506040880135945060608801359350611b0460808901611aa5565b925060a0880135915060c0880135905092959891949750929550565b60008060408385031215611b3357600080fd5b611b3c83611892565b9150611b4a60208401611892565b90509250929050565b600181811c90821680611b6757607f821691505b60208210811415611ba1577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082821015611be857611be8611ba7565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611c6357611c63611bed565b604052919050565b600067ffffffffffffffff821115611c8557611c85611bed565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f830112611cc257600080fd5b8135611cd5611cd082611c6b565b611c1c565b818152846020838601011115611cea57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600060608486031215611d1c57600080fd5b833567ffffffffffffffff80821115611d3457600080fd5b611d4087838801611cb1565b94506020860135915080821115611d5657600080fd5b50611d6386828701611cb1565b925050611d7260408501611aa5565b90509250925092565b60008219821115611d8e57611d8e611ba7565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611df757600080fd5b83018035915067ffffffffffffffff821115611e1257600080fd5b602001915036819003821315611e2757600080fd5b9250929050565b8183823760009101908152919050565b600060208284031215611e5057600080fd5b815167ffffffffffffffff811115611e6757600080fd5b8201601f81018413611e7857600080fd5b8051611e86611cd082611c6b565b818152856020838501011115611e9b57600080fd5b611eac826020830160208601611805565b95945050505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611ee757611ee7611ba7565b506001019056fea2646970667358221220d32d2b0a862a7434a55f3a4ff7330cb336b891cc17a965515b27480b5ea34b4764736f6c634300080b0033",
  "devdoc": {
    "author": "yoonsung.eth",
    "kind": "dev",
    "methods": {
      "initialize(bytes)": {
        "params": {
          "data": "토큰 이름, 토큰 심볼, 소수점 정보를 abi encode 하여, bytes 형태로 전달하여야 합니다."
        }
      },
      "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
        "params": {
          "deadline": "The time at which this expires (unix time)",
          "owner": "Token owner's address (Authorizer)",
          "r": "r of the signature",
          "s": "s of the signature",
          "spender": "Spender's address",
          "v": "v of the signature",
          "value": "Amount of allowance"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "Interface identification is specified in ERC-165. This function  uses less than 30,000 gas.",
        "params": {
          "interfaceID": "The interface identifier, as specified in ERC-165"
        },
        "returns": {
          "_0": "`true` if the contract implements `interfaceID` and  `interfaceID` is not 0xffffffff, `false` otherwise"
        }
      },
      "transferOwnership(address)": {
        "params": {
          "newOwner": "The address of the new owner of the contract"
        }
      }
    },
    "title": "StandardERC20",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "initialize(bytes)": {
        "notice": "ERC20을 초기화 합니다. 토큰의 이름, 심볼, 소수점 정보를 필요로 합니다. 이 함수는 실행될 때 단 한번만 실행됩니다. 이 함수가 실행될 때 이 함수를 실행한 당사자가 해당 컨트랙트의 소유권을 받게됩니다."
      },
      "owner()": {
        "notice": "Get the address of the owner"
      },
      "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
        "notice": "Verify a signed approval permit and execute if valid"
      },
      "supportsInterface(bytes4)": {
        "notice": "Query if a contract implements an interface"
      },
      "transferOwnership(address)": {
        "notice": "Set the address of the new owner of the contract"
      }
    },
    "notice": "ERC20과 ERC2612를 기본으로, ERC165, ERC173 명세를 구현하고 있습니다.",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 823,
        "contract": "contracts/tokens/StandardERC20.sol:StandardERC20",
        "label": "name",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      },
      {
        "astId": 825,
        "contract": "contracts/tokens/StandardERC20.sol:StandardERC20",
        "label": "symbol",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 827,
        "contract": "contracts/tokens/StandardERC20.sol:StandardERC20",
        "label": "decimals",
        "offset": 0,
        "slot": "2",
        "type": "t_uint8"
      },
      {
        "astId": 829,
        "contract": "contracts/tokens/StandardERC20.sol:StandardERC20",
        "label": "totalSupply",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 833,
        "contract": "contracts/tokens/StandardERC20.sol:StandardERC20",
        "label": "balanceOf",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 839,
        "contract": "contracts/tokens/StandardERC20.sol:StandardERC20",
        "label": "allowance",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 988,
        "contract": "contracts/tokens/StandardERC20.sol:StandardERC20",
        "label": "DOMAIN_SEPARATOR",
        "offset": 0,
        "slot": "6",
        "type": "t_bytes32"
      },
      {
        "astId": 990,
        "contract": "contracts/tokens/StandardERC20.sol:StandardERC20",
        "label": "version",
        "offset": 0,
        "slot": "7",
        "type": "t_string_storage"
      },
      {
        "astId": 994,
        "contract": "contracts/tokens/StandardERC20.sol:StandardERC20",
        "label": "nonces",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 2286,
        "contract": "contracts/tokens/StandardERC20.sol:StandardERC20",
        "label": "owner",
        "offset": 0,
        "slot": "9",
        "type": "t_address"
      },
      {
        "astId": 1818,
        "contract": "contracts/tokens/StandardERC20.sol:StandardERC20",
        "label": "_initialized",
        "offset": 20,
        "slot": "9",
        "type": "t_bool"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}